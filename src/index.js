/**
 * TheCoin Broker
 * TheCoin broker services.  To be implemented allowing exchange of local currency to THESE
 *
 * OpenAPI spec version: 0.0.1
 * Contact: stephen.taylor.dev@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import PurchaseRequest from './model/PurchaseRequest';
import PurchaseRequestSigned from './model/PurchaseRequestSigned';
import PurchaseResponse from './model/PurchaseResponse';
import PurchaseResponseSigned from './model/PurchaseResponseSigned';
import SellRequest from './model/SellRequest';
import SellRequestSigned from './model/SellRequestSigned';
import SellResponse from './model/SellResponse';
import SellResponseSigned from './model/SellResponseSigned';
import TapCapHistoryRequest from './model/TapCapHistoryRequest';
import TapCapHistoryRequestSigned from './model/TapCapHistoryRequestSigned';
import TapCapHistoryResponse from './model/TapCapHistoryResponse';
import TapCapHistoryResponseSigned from './model/TapCapHistoryResponseSigned';
import TapCapQueryRequest from './model/TapCapQueryRequest';
import TapCapQueryRequestSigned from './model/TapCapQueryRequestSigned';
import TapCapQueryResponse from './model/TapCapQueryResponse';
import TapCapQueryResponseSigned from './model/TapCapQueryResponseSigned';
import TapCapTransaction from './model/TapCapTransaction';
import ExchangeApi from './api/ExchangeApi';
import TapCapApi from './api/TapCapApi';


/**
* TheCoin_broker_services___To_be_implemented_allowing_exchange_of_local_currency_to_THESE.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var TheCoinBroker = require('index'); // See note below*.
* var xxxSvc = new TheCoinBroker.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new TheCoinBroker.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new TheCoinBroker.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new TheCoinBroker.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.0.1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The PurchaseRequest model constructor.
     * @property {module:model/PurchaseRequest}
     */
    PurchaseRequest,

    /**
     * The PurchaseRequestSigned model constructor.
     * @property {module:model/PurchaseRequestSigned}
     */
    PurchaseRequestSigned,

    /**
     * The PurchaseResponse model constructor.
     * @property {module:model/PurchaseResponse}
     */
    PurchaseResponse,

    /**
     * The PurchaseResponseSigned model constructor.
     * @property {module:model/PurchaseResponseSigned}
     */
    PurchaseResponseSigned,

    /**
     * The SellRequest model constructor.
     * @property {module:model/SellRequest}
     */
    SellRequest,

    /**
     * The SellRequestSigned model constructor.
     * @property {module:model/SellRequestSigned}
     */
    SellRequestSigned,

    /**
     * The SellResponse model constructor.
     * @property {module:model/SellResponse}
     */
    SellResponse,

    /**
     * The SellResponseSigned model constructor.
     * @property {module:model/SellResponseSigned}
     */
    SellResponseSigned,

    /**
     * The TapCapHistoryRequest model constructor.
     * @property {module:model/TapCapHistoryRequest}
     */
    TapCapHistoryRequest,

    /**
     * The TapCapHistoryRequestSigned model constructor.
     * @property {module:model/TapCapHistoryRequestSigned}
     */
    TapCapHistoryRequestSigned,

    /**
     * The TapCapHistoryResponse model constructor.
     * @property {module:model/TapCapHistoryResponse}
     */
    TapCapHistoryResponse,

    /**
     * The TapCapHistoryResponseSigned model constructor.
     * @property {module:model/TapCapHistoryResponseSigned}
     */
    TapCapHistoryResponseSigned,

    /**
     * The TapCapQueryRequest model constructor.
     * @property {module:model/TapCapQueryRequest}
     */
    TapCapQueryRequest,

    /**
     * The TapCapQueryRequestSigned model constructor.
     * @property {module:model/TapCapQueryRequestSigned}
     */
    TapCapQueryRequestSigned,

    /**
     * The TapCapQueryResponse model constructor.
     * @property {module:model/TapCapQueryResponse}
     */
    TapCapQueryResponse,

    /**
     * The TapCapQueryResponseSigned model constructor.
     * @property {module:model/TapCapQueryResponseSigned}
     */
    TapCapQueryResponseSigned,

    /**
     * The TapCapTransaction model constructor.
     * @property {module:model/TapCapTransaction}
     */
    TapCapTransaction,

    /**
    * The ExchangeApi service constructor.
    * @property {module:api/ExchangeApi}
    */
    ExchangeApi,

    /**
    * The TapCapApi service constructor.
    * @property {module:api/TapCapApi}
    */
    TapCapApi
};
